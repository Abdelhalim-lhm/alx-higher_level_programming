import add_integer function from module:

	>>> add_integer = __import__('0-add_integer').add_integer

Test two integers:

	>>> add_integer(1, 2)
	3

Test a positive and b negative:

	>>> add_integer(100, -2)
	98

Test a negative and b positive:

        >>> add_integer(-2, 100)
        98

Test add one argument:

	>>> add_integer(2)
	100

Test add a float and b negative:

	>>> add_integer(100.3, -2)
	98

Test add a nÃ©gative and b float:

        >>> add_integer(-2, 100.3)
        98

Test add a integer and b string:

	>>> add_integer(4, "School")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Test add a string and b integer:

        >>> add_integer("School", 4)
        Traceback (most recent call last):
        ...
        TypeError: a must be an integer

Test add no argument:

	>>> add_integer(None)
        Traceback (most recent call last):
        ...
        TypeError: a must be an integer

Test add infinity:

	>>> add_integer(float('-inf'), float('inf'))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

Test float Nan:

	>>> add_integer(0, float('nan'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer

Test float overflow:
    
	>>> add_integer(float('inf'), 0)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

