Import Module:

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Normal test:

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 12)

Empty stirng test:

	>>> bg.integer_validator("", 1)

no agrs test:

	>>> bg.integer_validator()
        Traceback (most recent call last):
        ...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

one arg test

	>>> bg.integer_validator("test")
        Traceback (most recent call last):
        ...
	TypeError: integer_validator() missing 1 required positional argument: 'value'



double string arg test:

	>>> bg = BaseGeometry()
        >>> bg.integer_validator("my_int", "string")
	Traceback (most recent call last):
	...
	TypeError: my_int must be an integer

negative value test:

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("distance", -4)
	Traceback (most recent call last):
	...
	ValueError: distance must be greater than 0

Test 0 value:

        >>> bg = BaseGeometry()
        >>> bg.integer_validator("distance", 0)
        Traceback (most recent call last):
        ...
        ValueError: distance must be greater than 0

Test bool value:

        >>> bg = BaseGeometry()
        >>> bg.integer_validator("my_int", True)
        Traceback (most recent call last):
        ...
        TypeError: my_int must be an integer
